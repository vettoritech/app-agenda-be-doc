{
	"openapi": "3.0.1",
	"info": {
		"title": "Agenda API",
		"description": "Agenda Application",
		"version": "v0.0.*"
	},
	"servers": [
		{
			"url": "http://ec2-54-159-12-88.compute-1.amazonaws.com",
			"description": "Deploy"
		}
	],
	"security": [
		{
			"bearer-key": []
		}
	],
	"paths": {
		"/api/{establishmentId}/user/{userId}/userEstablishment/{userEstablishmentId}": {
			"get": {
				"tags": [
					"User Establishment"
				],
				"summary": "Search for details of the user's relationship with the establishment",
				"operationId": "findById",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userEstablishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"404": {
						"description": "Not autorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserEstablishment"
								}
							}
						}
					},
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserEstablishment"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"User Establishment"
				],
				"summary": "Update user link with establishment",
				"operationId": "update",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userEstablishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserEstablishmentDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserEstablishment"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"User Establishment"
				],
				"summary": "Remove user link with establishment",
				"operationId": "delete",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userEstablishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/wa/{establishmentId}/account/{waAccountId}": {
			"get": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "findById_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "waAccountId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaAccount"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "update_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "waAccountId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WaAccountDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaAccount"
								}
							}
						}
					}
				}
			}
		},
		"/api/wa/{establishmentId}/account/{waAccountId}/unblock": {
			"put": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "unblock",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "waAccountId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaAccount"
								}
							}
						}
					}
				}
			}
		},
		"/api/wa/{establishmentId}/account/{waAccountId}/cancel": {
			"put": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "cancel",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "waAccountId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaAccount"
								}
							}
						}
					}
				}
			}
		},
		"/api/wa/{establishmentId}/account/{waAccountId}/block": {
			"put": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "block",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "waAccountId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaAccount"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/workDay/{workDayId}": {
			"get": {
				"tags": [
					"Work Day"
				],
				"operationId": "findByIdWorkDay",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDay"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Work Day"
				],
				"operationId": "updateWorkDay",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WorkDayDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDay"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Work Day"
				],
				"operationId": "deleteWorkDay",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/user/{userId}/address/{addressId}": {
			"get": {
				"tags": [
					"User Address"
				],
				"operationId": "findByIdAddress",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "addressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Address"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"User Address"
				],
				"operationId": "updateAddress",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "addressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddressDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Address"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}": {
			"get": {
				"tags": [
					"User"
				],
				"operationId": "findById_3",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserProjection"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"User"
				],
				"operationId": "update_2",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/telephone/{userTelephoneId}/cancel": {
			"put": {
				"tags": [
					"User Telephone"
				],
				"operationId": "cancel_1",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userTelephoneId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserTelephone"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/password": {
			"put": {
				"tags": [
					"User"
				],
				"operationId": "updateUserPassword",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPasswordDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/lock/{userLockId}/unlock": {
			"put": {
				"tags": [
					"User Lock"
				],
				"operationId": "unlock",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userLockId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserLock"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{serviceId}/serviceValue/{serviceValueId}": {
			"get": {
				"tags": [
					"Service Value"
				],
				"operationId": "findByIdServiceValue",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceValueId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceValue"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Service Value"
				],
				"operationId": "updateServiceValue",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceValueId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceValueDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceValue"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{serviceId}/serviceValue/{serviceValueId}/cancel": {
			"put": {
				"tags": [
					"Service Value"
				],
				"operationId": "cancelServiceValue",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceValueId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceValue"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{serviceId}/serviceLink/{serviceLinkId}": {
			"get": {
				"tags": [
					"Service Link"
				],
				"operationId": "findByIdServiceLink",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceLinkId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceLink"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Service Link"
				],
				"operationId": "updateServiceLink",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceLinkId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceLinkDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceLink"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Service Link"
				],
				"operationId": "deleteServiceLink",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceLinkId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/service/{establishmentId}/{serviceId}": {
			"get": {
				"tags": [
					"Service"
				],
				"operationId": "findById_6",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceDomain"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Service"
				],
				"operationId": "update_3",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{establishmentId}/{serviceId}/cancel": {
			"put": {
				"tags": [
					"Service"
				],
				"operationId": "cancelService",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{establishmentId}/category/{categoryId}": {
			"get": {
				"tags": [
					"Service Category"
				],
				"operationId": "findByIdCategory",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "categoryId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Category"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Service Category"
				],
				"operationId": "updateCategory",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "categoryId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Category"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{schedulingId}/service/{schedulingServiceId}": {
			"get": {
				"tags": [
					"Scheduling Service"
				],
				"operationId": "findByIdService",
				"parameters": [
					{
						"name": "schedulingServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingServiceDomain"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Scheduling Service"
				],
				"operationId": "updateService",
				"parameters": [
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SchedulingServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{schedulingId}/service/cancel/{schedulingServiceId}": {
			"put": {
				"tags": [
					"Scheduling Service"
				],
				"operationId": "cancelService_1",
				"parameters": [
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}/{schedulingId}": {
			"get": {
				"tags": [
					"Scheduling"
				],
				"operationId": "findById_7",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingDomain"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Scheduling"
				],
				"operationId": "update_4",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SchedulingDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}/{schedulingId}/refuse": {
			"put": {
				"tags": [
					"Scheduling"
				],
				"operationId": "refuseScheduled",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}/{schedulingId}/confirm": {
			"put": {
				"tags": [
					"Scheduling"
				],
				"operationId": "confirmScheduled",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}/{schedulingId}/cancel": {
			"put": {
				"tags": [
					"Scheduling"
				],
				"operationId": "cancelScheduled",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/establishment/{establishmentId}": {
			"get": {
				"tags": [
					"Establishment"
				],
				"summary": "Return a unique establishment",
				"operationId": "findById_8",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"description": "Establishment Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Establishment found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						}
					},
					"404": {
						"description": "Establishment not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Establishment"
				],
				"summary": "Update an existing establishment",
				"operationId": "update_5",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"description": "Establishment Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "Establishment to update",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EstablishmentDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Establishment updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						}
					}
				}
			}
		},
		"/api/establishment/{establishmentId}/workDayDefault/{workDayDefaultId}": {
			"get": {
				"tags": [
					"Work Day Default"
				],
				"operationId": "findById_9",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayDefaultId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDayDefault"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Work Day Default"
				],
				"operationId": "update_6",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayDefaultId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WorkDayDefaultDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDayDefault"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Work Day Default"
				],
				"operationId": "delete_2",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayDefaultId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDayDefault"
								}
							}
						}
					}
				}
			}
		},
		"/api/establishment/{establishmentId}/config/{establishmentConfigId}": {
			"get": {
				"tags": [
					"Establishment Config"
				],
				"summary": "Return an establishment config",
				"operationId": "findByIdEstablishmentConfig",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "establishmentConfigId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Config of establishment found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EstablishmentConfig"
								}
							}
						}
					},
					"404": {
						"description": "Config of establishment not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EstablishmentConfig"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Establishment Config"
				],
				"summary": "Update config of establishment",
				"operationId": "updateEstablishmentConfig",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "establishmentConfigId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "Config of establishment to update",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EstablishmentConfigDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Config updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EstablishmentConfig"
								}
							}
						}
					}
				}
			}
		},
		"/api/establishment/{establishmentId}/address/{addressId}": {
			"get": {
				"tags": [
					"Establishment Address"
				],
				"summary": "Return a unique address of establishment",
				"operationId": "findByIdAddress_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "addressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Address of establishment found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Address"
								}
							}
						}
					},
					"404": {
						"description": "Address of establishment not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Address"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Establishment Address"
				],
				"summary": "Update address of establishment",
				"operationId": "updateAddress_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "addressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "Address of establishment to update",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddressDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Address updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Address"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{establishmentId}/{attendanceId}": {
			"get": {
				"tags": [
					"Attendance"
				],
				"summary": "Return a unique attendance",
				"operationId": "findById_10",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"description": "Logged Establishment Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceId",
						"in": "path",
						"description": "Attendance Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Attendance found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					},
					"404": {
						"description": "Attendance not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Attendance"
				],
				"summary": "Update an existing attendance",
				"operationId": "update_7",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"description": "Logged Establishment Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceId",
						"in": "path",
						"description": "Attendance Id To Update",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "Attendance to update",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttendanceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Attendance updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{establishmentId}/finish/{attendanceId}": {
			"put": {
				"tags": [
					"Attendance"
				],
				"summary": "Mark an attendance as finished",
				"operationId": "finishAttendance",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttendanceFinishDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Attendance marked as finished",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{establishmentId}/cancel/{attendanceId}": {
			"put": {
				"tags": [
					"Attendance"
				],
				"summary": "Cancel an attendance",
				"operationId": "cancelAttendance",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Attendance cancelled",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{establishmentId}/absent/{attendanceId}": {
			"put": {
				"tags": [
					"Attendance"
				],
				"summary": "Mark an attendance as absent",
				"operationId": "absentAttendance",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Attendance marked as absent",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{attendanceId}/service/{attendanceServiceId}": {
			"get": {
				"tags": [
					"Attendance Service"
				],
				"summary": "Return a unique service of an attendance",
				"operationId": "findByIdAttendanceService",
				"parameters": [
					{
						"name": "attendanceId",
						"in": "path",
						"description": "Attendance Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceServiceId",
						"in": "path",
						"description": "Attendance Service Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Service of attendance found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceServiceDomain"
								}
							}
						}
					},
					"404": {
						"description": "Service of attendance not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceServiceDomain"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Attendance Service"
				],
				"summary": "Update an existing service in an attendance",
				"operationId": "updateAttendanceService",
				"parameters": [
					{
						"name": "attendanceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttendanceServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Service updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{attendanceId}/service/cancel/{attendanceServiceId}": {
			"put": {
				"tags": [
					"Attendance Service"
				],
				"summary": "Cancel a service of an attendance",
				"operationId": "cancelAttendanceService",
				"parameters": [
					{
						"name": "attendanceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "attendanceServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Service cancelled",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/{establishmentId}/user/{userId}/userEstablishment": {
			"get": {
				"tags": [
					"User Establishment"
				],
				"summary": "Search establishments linked to the user",
				"operationId": "findList",
				"parameters": [
					{
						"name": "userEstablishmentId",
						"in": "query"
					},
					{
						"name": "establishmentId",
						"in": "query"
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserEstablishment"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"User Establishment"
				],
				"summary": "Link user with establishment",
				"operationId": "insert",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserEstablishmentDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserEstablishment"
								}
							}
						}
					}
				}
			}
		},
		"/api/webhook/whatsapp": {
			"post": {
				"tags": [
					"Public"
				],
				"operationId": "whatsapp",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WhatsappWebhookValidationDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/wa/{establishmentId}/account": {
			"get": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "findList_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/WaAccountSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageWaAccount"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Whatsapp Account Data"
				],
				"operationId": "insert_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WaAccountDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaAccount"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/workHourSchedException": {
			"get": {
				"tags": [
					"Work Hour Sched Exception"
				],
				"operationId": "findListWorkHourSchedException",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/WorkHourSchedExceptionSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageWorkHourSchedException"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Work Hour Sched Exception"
				],
				"operationId": "insertWorkHourSchedException",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WorkHourSchedExceptionDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkHourSchedException"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/workDay": {
			"get": {
				"tags": [
					"Work Day"
				],
				"operationId": "findListWorkDay",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/WorkDaySpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageWorkDay"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Work Day"
				],
				"operationId": "insertWorkDay",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WorkDayDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDay"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/workDay/establishmentDefault": {
			"post": {
				"tags": [
					"Work Day"
				],
				"operationId": "insertByEstablishmentDefault",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/userPermission": {
			"get": {
				"tags": [
					"User Permission"
				],
				"operationId": "findListUserPermission",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserPermissionSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserPermission"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"User Permission"
				],
				"operationId": "insertUserPermission",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPermissionDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserPermission"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay": {
			"get": {
				"tags": [
					"Month Work Day"
				],
				"operationId": "findList_2",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/MonthWorkDaySpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageMonthWorkDay"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Month Work Day"
				],
				"operationId": "insert_2",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MonthWorkDayDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MonthWorkDay"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay/replicate/{yearMonth}/{userIdDestination}": {
			"post": {
				"tags": [
					"Month Work Day"
				],
				"summary": "Replicate configuration from one user to another. Will remove old configuration if any, for given month",
				"operationId": "replicateConfigurationByUser",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userIdDestination",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "yearMonth",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay/defaultWorkDay/{yearMonth}": {
			"post": {
				"tags": [
					"Month Work Day"
				],
				"summary": "Release schedule for user, for the month informed",
				"operationId": "insertDefaultMonthWork",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "yearMonth",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay/defaultWorkDay/{initDate}/{finishDate}": {
			"post": {
				"tags": [
					"Month Work Day"
				],
				"summary": "Release schedule for user referring to the range of dates sent",
				"operationId": "insertDefaultMonthWork_1",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "initDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "finishDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay/block/{yearMonth}": {
			"post": {
				"tags": [
					"Month Work Day"
				],
				"summary": "Blocked Year/Month",
				"operationId": "blockMonthWork",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "yearMonth",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay/block/{initDate}/{finishDate}": {
			"post": {
				"tags": [
					"Month Work Day"
				],
				"summary": "Blocked date range",
				"operationId": "blockMonthWorkByRangeDate",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "initDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "finishDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/defaultWorkSched": {
			"post": {
				"tags": [
					"Work Hour Sched Info"
				],
				"operationId": "generateEmployeeWorkTime",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/user/{userId}/userService": {
			"get": {
				"tags": [
					"User Service"
				],
				"operationId": "findListUserServiceDomain",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserServiceSpec"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserServiceDomain"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"User Service"
				],
				"operationId": "insertUserServiceDomain",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/telephone": {
			"get": {
				"tags": [
					"User Telephone"
				],
				"operationId": "findList_4",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserTelephoneSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserTelephone"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"User Telephone"
				],
				"operationId": "insert_3",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserTelephoneDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserTelephone"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/lock": {
			"get": {
				"tags": [
					"User Lock"
				],
				"operationId": "findList_5",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserLockSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserLock"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"User Lock"
				],
				"operationId": "insert_4",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLockDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserLock"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/": {
			"post": {
				"tags": [
					"User"
				],
				"operationId": "insert_5",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}": {
			"get": {
				"tags": [
					"User"
				],
				"operationId": "findList_3",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUser"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"User"
				],
				"operationId": "insert_6",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{serviceId}/serviceValue": {
			"get": {
				"tags": [
					"Service Value"
				],
				"operationId": "findListServiceValue",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ServiceValueSpec"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageServiceValue"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Service Value"
				],
				"operationId": "insertServiceValue",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceValueDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceValue"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{serviceId}/serviceLink": {
			"get": {
				"tags": [
					"Service Link"
				],
				"operationId": "findListServiceLink",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ServiceLinkSpec"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageServiceLink"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Service Link"
				],
				"operationId": "insertServiceLink",
				"parameters": [
					{
						"name": "serviceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceLinkDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceLink"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{establishmentId}": {
			"get": {
				"tags": [
					"Service"
				],
				"operationId": "findList_6",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ServiceSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageServiceDomain"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Service"
				],
				"operationId": "insert_7",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{establishmentId}/category": {
			"get": {
				"tags": [
					"Service Category"
				],
				"operationId": "findListCategory",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CategorySpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageCategory"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Service Category"
				],
				"operationId": "insertCategory",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Category"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{schedulingId}/service": {
			"get": {
				"tags": [
					"Scheduling Service"
				],
				"operationId": "findListService",
				"parameters": [
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SchedulingServiceSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageSchedulingServiceDomain"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Scheduling Service"
				],
				"operationId": "insertService",
				"parameters": [
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SchedulingServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}": {
			"get": {
				"tags": [
					"Scheduling"
				],
				"operationId": "findList_7",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SchedulingSpec"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageSchedulingDomain"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Scheduling"
				],
				"operationId": "insert_8",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SchedulingDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/public/establishment/scheduling/{establishmentId}": {
			"post": {
				"tags": [
					"Public"
				],
				"operationId": "addScheduling",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PublicSchedulingDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingDomain"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/establishment": {
			"get": {
				"tags": [
					"Establishment"
				],
				"summary": "Return a list of establishments",
				"operationId": "findList_8",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "query",
						"description": "Establishment Id (Equal)"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name (LikeIgnoreCase)"
					},
					{
						"name": "publicIdentifier",
						"in": "query",
						"description": "Public Identifier (LikeIgnoreCase)"
					},
					{
						"name": "clientName",
						"in": "query",
						"description": "Client Name (LikeIgnoreCase)"
					},
					{
						"name": "responsibleUserId",
						"in": "query",
						"description": "Responsible User Id (Equal)"
					},
					{
						"name": "responsibleUserName",
						"in": "query",
						"description": "Responsible User Name (LikeIgnoreCase)"
					},
					{
						"name": "situationType",
						"in": "query",
						"description": "Situation Type (In)",
						"schema": {
							"type": "string",
							"enum": [
								"ACTIVE",
								"CANCELED"
							]
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/EstablishmentSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Found zero or more results",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageEstablishment"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Establishment"
				],
				"summary": "Create new establishment",
				"operationId": "insert_9",
				"requestBody": {
					"description": "Establishment to create",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EstablishmentDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Establishment created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						}
					}
				}
			}
		},
		"/api/establishment/{establishmentId}/workDayDefault": {
			"get": {
				"tags": [
					"Work Day Default"
				],
				"operationId": "findList_9",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/WorkDayDefaultProjection"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Work Day Default"
				],
				"operationId": "insert_10",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WorkDayDefaultDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkDayDefault"
								}
							}
						}
					}
				}
			}
		},
		"/api/auth/newUser": {
			"post": {
				"tags": [
					"Auth"
				],
				"summary": "Create new user",
				"operationId": "newUser",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCredentialsDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "New user created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserAuthenticatedResponseDto"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/auth/login": {
			"post": {
				"tags": [
					"Auth"
				],
				"summary": "Login",
				"operationId": "login",
				"requestBody": {
					"description": "Login",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCredentialsDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Logged with success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserAuthenticatedResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Bad Credentials",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserAuthenticatedResponseDto"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/attendance/{establishmentId}": {
			"get": {
				"tags": [
					"Attendance"
				],
				"summary": "Return a list of attendance",
				"operationId": "findList_10",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"description": "Logged Establishment Id (Equal)",
						"required": true
					},
					{
						"name": "attendanceId",
						"in": "query",
						"description": "Attendance Id (Equal)"
					},
					{
						"name": "clientId",
						"in": "query",
						"description": "Client Id (Equal)"
					},
					{
						"name": "clientName",
						"in": "query",
						"description": "Client Name (LikeIgnoreCase)"
					},
					{
						"name": "situationType",
						"in": "query",
						"description": "Situation Type (In)",
						"schema": {
							"type": "string",
							"enum": [
								"ACTIVE",
								"PARTIALLY_ANSWERED",
								"CONCLUDED",
								"ABSENT",
								"CANCELED"
							]
						}
					},
					{
						"name": "beginInGreater",
						"in": "query",
						"description": "Begin In (GreaterThanOrEqual)"
					},
					{
						"name": "beginInLess",
						"in": "query",
						"description": "Begin In (LessThanOrEqual)"
					},
					{
						"name": "endInGreater",
						"in": "query",
						"description": "End In (GreaterThanOrEqual)"
					},
					{
						"name": "endInLess",
						"in": "query",
						"description": "End In (LessThanOrEqual)"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Found zero or more results",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageAttendanceDomain"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Attendance"
				],
				"summary": "Create new attendance",
				"operationId": "insert_11",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"description": "Logged Establishment Id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "Attendance to create",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttendanceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Attendance created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/attendance/{attendanceId}/service": {
			"get": {
				"tags": [
					"Attendance Service"
				],
				"summary": "Return a list of services of an attendance",
				"operationId": "findListAttendanceService",
				"parameters": [
					{
						"name": "attendanceId",
						"in": "path",
						"description": "Attendance Id (Equal)",
						"required": true
					},
					{
						"name": "serviceId",
						"in": "query",
						"description": "Service Id (Equal)"
					},
					{
						"name": "schedulingServiceId",
						"in": "query",
						"description": "Scheduling Service Id (Equal)"
					},
					{
						"name": "situationType",
						"in": "query",
						"description": "Situation Type (In)",
						"schema": {
							"type": "string",
							"enum": [
								"ACTIVE",
								"CANCELED"
							]
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Found zero or more results",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageAttendanceServiceDomain"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Attendance Service"
				],
				"summary": "Add new service to an attendance",
				"operationId": "insertAttendanceService",
				"parameters": [
					{
						"name": "attendanceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttendanceServiceDomainDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Service added to attendance",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttendanceServiceDomain"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/workHourSchedException/{workHourSchedExceptionId}": {
			"get": {
				"tags": [
					"Work Hour Sched Exception"
				],
				"operationId": "findByIdWorkHourSchedException",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workHourSchedExceptionId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WorkHourSchedException"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Work Hour Sched Exception"
				],
				"operationId": "deleteWorkHourSchedException",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workHourSchedExceptionId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/workDay/user": {
			"get": {
				"tags": [
					"Work Day"
				],
				"operationId": "findListUserWorkDay",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/WorkDayUserProjection"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/userPermission/{userPermissionId}": {
			"get": {
				"tags": [
					"User Permission"
				],
				"operationId": "findByIdUserPermission",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userPermissionId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserPermission"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"User Permission"
				],
				"operationId": "deleteUserPermission",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userPermissionId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/user/{userId}/{establishmentId}/monthWorkDay/{workDayId}": {
			"get": {
				"tags": [
					"Month Work Day"
				],
				"operationId": "findById_2",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MonthWorkDay"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Month Work Day"
				],
				"operationId": "delete_1",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "workDayId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/user/{userId}/userService/{userServiceId}": {
			"get": {
				"tags": [
					"User Service"
				],
				"operationId": "findByIdUserServiceDomain",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserServiceDomain"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"User Service"
				],
				"operationId": "deleteUserServiceDomain",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userServiceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/telephone/{userTelephoneId}": {
			"get": {
				"tags": [
					"User Telephone"
				],
				"operationId": "findById_4",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userTelephoneId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserTelephone"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/{userId}/lock/{userLockId}": {
			"get": {
				"tags": [
					"User Lock"
				],
				"operationId": "findById_5",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userLockId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserLock"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/workHourSched/{userEmployeeId}/{day}": {
			"get": {
				"tags": [
					"Work Hour Sched Info"
				],
				"operationId": "workHourSchedList",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userEmployeeId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "day",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageWorkHourSchedInfo"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/perm/{tpPermissionType}": {
			"get": {
				"tags": [
					"User"
				],
				"operationId": "findListTpPermission",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "tpPermissionType",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"ROLE_ADM",
								"ROLE_OWNER",
								"ROLE_EMPLOYEE",
								"ROLE_CLIENT",
								"ROLE_PRE_CLIENT"
							]
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUser"
								}
							}
						}
					}
				}
			}
		},
		"/api/user/{establishmentId}/establishment": {
			"get": {
				"tags": [
					"User"
				],
				"operationId": "findAllWithEstablishment",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserProjection"
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{establishmentId}/withValue": {
			"get": {
				"tags": [
					"Service"
				],
				"operationId": "findListWithValue",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ServiceDomainProjection"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/service/{establishmentId}/serviceValue/grouped": {
			"get": {
				"tags": [
					"Service Value"
				],
				"operationId": "findListServiceValueGroupedByEstablishment",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ServiceValueGroupedSpec"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ServiceDomain"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}/{beginFilter}/{endFilter}/{justFreeTime}": {
			"get": {
				"tags": [
					"Scheduling"
				],
				"operationId": "findSchedulingList",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "beginFilter",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "endFilter",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "justFreeTime",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"YES",
								"NO"
							]
						}
					},
					{
						"name": "serviceListId",
						"in": "query",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"name": "userEmployeeId",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingResponseDto"
								}
							}
						}
					}
				}
			}
		},
		"/api/scheduling/{establishmentId}/reduced": {
			"get": {
				"tags": [
					"Scheduling"
				],
				"operationId": "findListReduced",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageSchedulingDomainProjection"
								}
							}
						}
					}
				}
			}
		},
		"/api/public/establishment": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findListEstablishment",
				"parameters": [
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/EstablishmentSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageEstablishment"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/{establishmentId}/userEstablishment/employee": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findListEstablishmentAttendant",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserEstablishmentSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserEstablishment"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/{establishmentId}/service": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findListServiceByEstablishment",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "specification",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ServiceSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageServiceDomain"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/{establishmentId}/service/groupedValue": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findListGroupedByEstablishment",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ServiceValueGroupedSpec"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ServiceDomain"
									}
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/scheduling/{schedulingId}": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findByIdEstablishmentSchedulingByUser",
				"parameters": [
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingDomain"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/scheduling/{schedulingId}/service": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findListEstablishmentSchedulingServiceByUser",
				"parameters": [
					{
						"name": "schedulingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SchedulingServiceSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageSchedulingServiceDomain"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/scheduling/{establishmentId}/{beginFilter}/{endFilter}": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findFreeSchedulingList",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "beginFilter",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "endFilter",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "serviceListId",
						"in": "query",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"name": "userEmployeeId",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchedulingResponseDto"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/public/establishment/scheduling/{establishmentId}/user/{phoneNumber}/{publicReference}": {
			"get": {
				"tags": [
					"Public"
				],
				"operationId": "findListEstablishmentSchedulingByUser",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "phoneNumber",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "publicReference",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SchedulingSpec"
						}
					},
					{
						"name": "pageable",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Pageable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageSchedulingDomain"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/api/establishment/{establishmentId}/userEstablishment/employee": {
			"get": {
				"tags": [
					"Establishment Employee"
				],
				"summary": "Return a list of attendance",
				"operationId": "findListEstablishmentAttendant_1",
				"parameters": [
					{
						"name": "establishmentId",
						"in": "query",
						"description": "Establishment Id (Equal)"
					},
					{
						"name": "userId",
						"in": "query",
						"description": "User Id (Equal)"
					},
					{
						"name": "establishmentId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "spec",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UserEstablishmentSpec"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Found zero or more results",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PageUserEstablishment"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"UserEstablishmentDto": {
				"type": "object",
				"properties": {
					"establishmentId": {
						"type": "string",
						"format": "uuid"
					},
					"linkedUserId": {
						"type": "string",
						"format": "uuid"
					},
					"isDefaultType": {
						"type": "string",
						"enum": [
							"YES",
							"NO"
						]
					},
					"nickname": {
						"type": "string"
					}
				}
			},
			"Address": {
				"type": "object",
				"properties": {
					"addressId": {
						"type": "string",
						"format": "uuid"
					},
					"cep": {
						"type": "string"
					},
					"uf": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"district": {
						"type": "string"
					},
					"road": {
						"type": "string"
					},
					"number": {
						"type": "string"
					},
					"complement": {
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"Establishment": {
				"type": "object",
				"properties": {
					"establishmentId": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"publicIdentifier": {
						"type": "string"
					},
					"responsibleUser": {
						"$ref": "#/components/schemas/User"
					},
					"telephone": {
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"address": {
						"$ref": "#/components/schemas/Address"
					},
					"establishmentConfig": {
						"$ref": "#/components/schemas/EstablishmentConfig"
					}
				}
			},
			"EstablishmentConfig": {
				"required": [
					"defaultInterval"
				],
				"type": "object",
				"properties": {
					"establishmentConfigId": {
						"type": "string",
						"format": "uuid"
					},
					"defaultInterval": {
						"type": "integer",
						"format": "int64"
					},
					"incrementKey": {
						"type": "string"
					},
					"amountMissingToBlock": {
						"type": "integer",
						"format": "int64"
					},
					"establishment": {
						"$ref": "#/components/schemas/Establishment"
					}
				}
			},
			"User": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"IN_REGISTRATION",
							"ACTIVE",
							"CANCELED"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"userIsBloqued": {
						"type": "boolean"
					},
					"address": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"UserEstablishment": {
				"required": [
					"createdAt",
					"establishment",
					"isDefaultType",
					"linkedUser",
					"userEstablishmentId"
				],
				"type": "object",
				"properties": {
					"userEstablishmentId": {
						"type": "string",
						"format": "uuid"
					},
					"establishment": {
						"$ref": "#/components/schemas/Establishment"
					},
					"isDefaultType": {
						"type": "string",
						"enum": [
							"YES",
							"NO"
						]
					},
					"linkedUser": {
						"$ref": "#/components/schemas/User"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"nickname": {
						"type": "string"
					}
				}
			},
			"WaAccountDto": {
				"type": "object",
				"properties": {
					"waToken": {
						"type": "string"
					},
					"wabaId": {
						"type": "string"
					},
					"phoneNumberId": {
						"type": "string"
					},
					"accountType": {
						"type": "string",
						"enum": [
							"ADM",
							"CLIENT"
						]
					},
					"userTelephoneId": {
						"type": "string",
						"format": "uuid"
					},
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"telephone": {
						"type": "string"
					}
				}
			},
			"UserTelephone": {
				"required": [
					"situationType"
				],
				"type": "object",
				"properties": {
					"userTelephoneId": {
						"type": "string",
						"format": "uuid"
					},
					"telephone": {
						"maxLength": 20,
						"minLength": 0,
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"verificationType": {
						"type": "string",
						"enum": [
							"NOT_VERIFIED",
							"VERIFIED"
						]
					},
					"user": {
						"$ref": "#/components/schemas/User"
					}
				}
			},
			"WaAccount": {
				"required": [
					"accountType",
					"phoneNumberId",
					"situationType",
					"wabaId"
				],
				"type": "object",
				"properties": {
					"waAccountId": {
						"type": "string",
						"format": "uuid"
					},
					"waToken": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"wabaId": {
						"maxLength": 50,
						"minLength": 0,
						"type": "string"
					},
					"phoneNumberId": {
						"maxLength": 50,
						"minLength": 0,
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"BLOCKED",
							"CANCELED"
						]
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"accountType": {
						"type": "string",
						"enum": [
							"ADM",
							"CLIENT"
						]
					},
					"userTelephone": {
						"$ref": "#/components/schemas/UserTelephone"
					},
					"webhookUserToken": {
						"maxLength": 1024,
						"minLength": 0,
						"type": "string"
					}
				}
			},
			"LocalTime": {
				"type": "object",
				"properties": {
					"hour": {
						"type": "integer",
						"format": "int32"
					},
					"minute": {
						"type": "integer",
						"format": "int32"
					},
					"second": {
						"type": "integer",
						"format": "int32"
					},
					"nano": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"WorkDayDto": {
				"type": "object",
				"properties": {
					"dayWeek": {
						"type": "string",
						"enum": [
							"SUNDAY",
							"MONDAY",
							"TUESDAY",
							"WEDNESDAY",
							"THURSDAY",
							"FRIDAY",
							"SATURDAY"
						]
					},
					"startService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"startBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"userEmployeeId": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"WeekTab": {
				"type": "object",
				"properties": {
					"dayWeek": {
						"type": "string",
						"enum": [
							"SUNDAY",
							"MONDAY",
							"TUESDAY",
							"WEDNESDAY",
							"THURSDAY",
							"FRIDAY",
							"SATURDAY"
						]
					},
					"orderDay": {
						"type": "integer",
						"format": "int64"
					}
				},
				"description": "Week day"
			},
			"WorkDay": {
				"type": "object",
				"properties": {
					"workDayId": {
						"type": "string",
						"description": "Primary key",
						"format": "uuid"
					},
					"dayWeek": {
						"$ref": "#/components/schemas/WeekTab"
					},
					"startService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "Start time of work"
					},
					"endService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "End time of work"
					},
					"startBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "Start time of break"
					},
					"endBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "End time of break"
					},
					"userEmployee": {
						"type": "string",
						"format": "uuid"
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					}
				},
				"description": "Employee working time each day of the week"
			},
			"AddressDto": {
				"type": "object",
				"properties": {
					"cep": {
						"type": "string"
					},
					"uf": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"district": {
						"type": "string"
					},
					"road": {
						"type": "string"
					},
					"number": {
						"type": "string"
					},
					"complement": {
						"type": "string"
					}
				}
			},
			"UserDto": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"nickname": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"telephone": {
						"maxLength": 2147483647,
						"minLength": 9,
						"type": "string"
					},
					"userPass": {
						"type": "string"
					},
					"address": {
						"$ref": "#/components/schemas/AddressDto"
					}
				}
			},
			"UserPasswordDto": {
				"required": [
					"confirmUserPass",
					"userPass"
				],
				"type": "object",
				"properties": {
					"currentPassword": {
						"type": "string"
					},
					"userPass": {
						"maxLength": 2147483647,
						"minLength": 6,
						"type": "string"
					},
					"confirmUserPass": {
						"maxLength": 2147483647,
						"minLength": 6,
						"type": "string"
					}
				}
			},
			"UserLock": {
				"type": "object",
				"properties": {
					"userLockId": {
						"type": "string",
						"format": "uuid"
					},
					"establishment": {
						"$ref": "#/components/schemas/Establishment"
					},
					"lockedUser": {
						"$ref": "#/components/schemas/User"
					},
					"lockedAt": {
						"type": "string",
						"format": "date-time"
					},
					"manualLockUser": {
						"$ref": "#/components/schemas/User"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"BLOCKED",
							"UNLOCKED"
						]
					},
					"unlockUser": {
						"$ref": "#/components/schemas/User"
					},
					"unlockAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"ServiceValueDto": {
				"type": "object",
				"properties": {
					"value": {
						"type": "number"
					},
					"description": {
						"type": "string"
					}
				}
			},
			"ServiceValue": {
				"type": "object",
				"properties": {
					"serviceValueId": {
						"type": "string",
						"format": "uuid"
					},
					"service": {
						"type": "string",
						"format": "uuid"
					},
					"description": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"ServiceLinkDto": {
				"type": "object",
				"properties": {
					"relatedServiceId": {
						"type": "string",
						"format": "uuid"
					},
					"relatedCategoryId": {
						"type": "string",
						"format": "uuid"
					},
					"quantity": {
						"type": "number"
					}
				}
			},
			"Category": {
				"type": "object",
				"properties": {
					"categoryId": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"ServiceDomain": {
				"type": "object",
				"properties": {
					"serviceId": {
						"type": "string",
						"format": "uuid"
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"category": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"amountTime": {
						"type": "integer",
						"format": "int64"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"value": {
						"type": "number"
					},
					"serviceValueList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ServiceValue"
						}
					}
				}
			},
			"ServiceLink": {
				"type": "object",
				"properties": {
					"serviceLinkId": {
						"type": "string",
						"format": "uuid"
					},
					"linkedService": {
						"$ref": "#/components/schemas/ServiceDomain"
					},
					"relatedService": {
						"$ref": "#/components/schemas/ServiceDomain"
					},
					"relatedCategory": {
						"$ref": "#/components/schemas/Category"
					},
					"quantity": {
						"type": "number"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"ServiceDomainDto": {
				"type": "object",
				"properties": {
					"categoryId": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"amountTime": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"CategoryDto": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"SchedulingServiceDomainDto": {
				"type": "object",
				"properties": {
					"serviceValueId": {
						"type": "string",
						"format": "uuid"
					},
					"serviceId": {
						"type": "string",
						"format": "uuid"
					},
					"value": {
						"type": "number"
					}
				}
			},
			"SchedulingServiceDomain": {
				"type": "object",
				"properties": {
					"schedulingServiceId": {
						"type": "string",
						"format": "uuid"
					},
					"scheduling": {
						"type": "string",
						"format": "uuid"
					},
					"service": {
						"$ref": "#/components/schemas/ServiceDomain"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"value": {
						"type": "number"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"attendanceService": {
						"type": "string",
						"format": "uuid"
					},
					"serviceValue": {
						"$ref": "#/components/schemas/ServiceValue"
					}
				}
			},
			"SchedulingDomainDto": {
				"type": "object",
				"properties": {
					"schedulingDate": {
						"type": "string",
						"format": "date-time"
					},
					"attendantUserId": {
						"type": "string",
						"format": "uuid"
					},
					"clientUserId": {
						"type": "string",
						"format": "uuid"
					},
					"observation": {
						"type": "string"
					},
					"serviceList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingServiceDomainDto"
						}
					}
				}
			},
			"SchedulingDomain": {
				"type": "object",
				"properties": {
					"schedulingId": {
						"type": "string",
						"format": "uuid"
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"beginIn": {
						"type": "string",
						"format": "date-time"
					},
					"endIn": {
						"type": "string",
						"format": "date-time"
					},
					"attendantUser": {
						"$ref": "#/components/schemas/User"
					},
					"clientUser": {
						"$ref": "#/components/schemas/User"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"PRE_SCHEDULED",
							"SCHEDULED",
							"REFUSED",
							"CANCELED"
						]
					},
					"observation": {
						"type": "string"
					},
					"publicReference": {
						"type": "string"
					},
					"totalServiceValue": {
						"type": "number"
					},
					"attendance": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"EstablishmentConfigDto": {
				"type": "object",
				"properties": {
					"defaultInterval": {
						"type": "integer",
						"format": "int64"
					},
					"amountMissingToBlock": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"EstablishmentDto": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"responsibleUserId": {
						"type": "string",
						"format": "uuid"
					},
					"telephone": {
						"type": "string"
					},
					"publicIdentifier": {
						"type": "string"
					},
					"establishmentConfig": {
						"$ref": "#/components/schemas/EstablishmentConfigDto"
					},
					"address": {
						"$ref": "#/components/schemas/AddressDto"
					}
				}
			},
			"WorkDayDefaultDto": {
				"type": "object",
				"properties": {
					"dayWeek": {
						"type": "string",
						"enum": [
							"SUNDAY",
							"MONDAY",
							"TUESDAY",
							"WEDNESDAY",
							"THURSDAY",
							"FRIDAY",
							"SATURDAY"
						]
					},
					"startService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"startBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					}
				}
			},
			"WorkDayDefault": {
				"type": "object",
				"properties": {
					"workDayDefaultId": {
						"type": "string",
						"description": "Primary key",
						"format": "uuid"
					},
					"dayWeek": {
						"$ref": "#/components/schemas/WeekTab"
					},
					"startService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "Start time of work"
					},
					"endService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "End time of work"
					},
					"startBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "Start time of break"
					},
					"endBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						},
						"description": "End time of break"
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					}
				},
				"description": "Standard working hours by establishment to facilitate employee registration"
			},
			"AttendanceDomainDto": {
				"required": [
					"paymentType"
				],
				"type": "object",
				"properties": {
					"attendantUserId": {
						"type": "string",
						"format": "uuid"
					},
					"clientUserId": {
						"type": "string",
						"format": "uuid"
					},
					"paymentType": {
						"type": "string",
						"enum": [
							"MONEY",
							"CREDIT_CARD",
							"DEBIT_CARD",
							"PIX",
							"PIC_PAY"
						]
					},
					"observation": {
						"type": "string"
					}
				}
			},
			"AttendanceDomain": {
				"type": "object",
				"properties": {
					"attendanceId": {
						"type": "string",
						"format": "uuid"
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"attendantUser": {
						"$ref": "#/components/schemas/User"
					},
					"clientUser": {
						"$ref": "#/components/schemas/User"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"paymentType": {
						"type": "string",
						"enum": [
							"MONEY",
							"CREDIT_CARD",
							"DEBIT_CARD",
							"PIX",
							"PIC_PAY"
						]
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"PARTIALLY_ANSWERED",
							"CONCLUDED",
							"ABSENT",
							"CANCELED"
						]
					},
					"observation": {
						"type": "string"
					}
				}
			},
			"AttendanceFinishDto": {
				"type": "object",
				"properties": {
					"observation": {
						"maxLength": 255,
						"minLength": 10,
						"type": "string"
					}
				}
			},
			"AttendanceServiceDomainDto": {
				"type": "object",
				"properties": {
					"serviceId": {
						"type": "string",
						"format": "uuid"
					},
					"quantity": {
						"type": "number"
					},
					"value": {
						"type": "number"
					}
				}
			},
			"AttendanceServiceDomain": {
				"type": "object",
				"properties": {
					"attendanceServiceId": {
						"type": "string",
						"format": "uuid"
					},
					"attendance": {
						"type": "string",
						"format": "uuid"
					},
					"service": {
						"$ref": "#/components/schemas/ServiceDomain"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"quantity": {
						"type": "number"
					},
					"value": {
						"type": "number"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					}
				}
			},
			"WhatsappWebhookValidationDto": {
				"required": [
					"awsRequestId",
					"challenge",
					"hubMode",
					"token"
				],
				"type": "object",
				"properties": {
					"hubMode": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"challenge": {
						"type": "string"
					},
					"awsRequestId": {
						"type": "string"
					}
				}
			},
			"WorkHourSchedExceptionDto": {
				"type": "object",
				"properties": {
					"dayException": {
						"type": "string",
						"format": "date"
					},
					"workHourId": {
						"type": "string",
						"format": "uuid"
					},
					"startTime": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endTime": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					}
				}
			},
			"WorkHourSched": {
				"type": "object",
				"properties": {
					"workHourId": {
						"type": "string",
						"format": "uuid"
					},
					"dayWeek": {
						"type": "string",
						"enum": [
							"SUNDAY",
							"MONDAY",
							"TUESDAY",
							"WEDNESDAY",
							"THURSDAY",
							"FRIDAY",
							"SATURDAY"
						]
					},
					"hour": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"userEmployee": {
						"type": "string",
						"format": "uuid"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"workHourSchedExceptions": {
						"$ref": "#/components/schemas/WorkHourSchedException"
					}
				}
			},
			"WorkHourSchedException": {
				"type": "object",
				"properties": {
					"workHourSchedExceptionId": {
						"type": "string",
						"format": "uuid"
					},
					"dayException": {
						"type": "string",
						"format": "date"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"workHourSched": {
						"$ref": "#/components/schemas/WorkHourSched"
					},
					"startTime": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endTime": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					}
				}
			},
			"UserPermissionDto": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"tpPermissionType": {
						"type": "string",
						"enum": [
							"ROLE_ADM",
							"ROLE_OWNER",
							"ROLE_EMPLOYEE",
							"ROLE_CLIENT",
							"ROLE_PRE_CLIENT"
						]
					},
					"establishmentId": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"Permission": {
				"type": "object",
				"properties": {
					"permissionKey": {
						"type": "string",
						"enum": [
							"ROLE_ADM",
							"ROLE_OWNER",
							"ROLE_EMPLOYEE",
							"ROLE_CLIENT",
							"ROLE_PRE_CLIENT"
						]
					},
					"description": {
						"type": "string"
					}
				}
			},
			"UserPermission": {
				"type": "object",
				"properties": {
					"userPermissionId": {
						"type": "string",
						"format": "uuid"
					},
					"user": {
						"type": "string",
						"format": "uuid"
					},
					"permission": {
						"$ref": "#/components/schemas/Permission"
					},
					"establishment": {
						"type": "string",
						"format": "uuid"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"MonthWorkDayDto": {
				"type": "object",
				"properties": {
					"day": {
						"type": "string",
						"format": "date"
					},
					"userEmployeeId": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"MonthWorkDay": {
				"type": "object",
				"properties": {
					"monthWorkDayId": {
						"type": "string",
						"format": "uuid"
					},
					"day": {
						"type": "string",
						"format": "date"
					}
				}
			},
			"UserServiceDomainDto": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"serviceLinkedId": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"UserServiceDomain": {
				"type": "object",
				"properties": {
					"userServiceId": {
						"type": "string",
						"format": "uuid"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"serviceLinked": {
						"$ref": "#/components/schemas/ServiceDomain"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"UserTelephoneDto": {
				"type": "object",
				"properties": {
					"telephone": {
						"type": "string"
					}
				}
			},
			"UserLockDto": {
				"type": "object",
				"properties": {
					"userIdToLock": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"PublicSchedulingDto": {
				"required": [
					"serviceList",
					"telephone"
				],
				"type": "object",
				"properties": {
					"schedulingDate": {
						"type": "string",
						"format": "date-time"
					},
					"attendantUserId": {
						"type": "string",
						"format": "uuid"
					},
					"observation": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"telephone": {
						"type": "string"
					},
					"serviceList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingServiceDomainDto"
						}
					}
				}
			},
			"UserCredentialsDto": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"telephone": {
						"type": "string"
					},
					"userPass": {
						"type": "string"
					},
					"publicIdentifier": {
						"type": "string"
					}
				}
			},
			"UserAuthenticatedResponseDto": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"authToken": {
						"type": "string"
					},
					"userEstablishmentList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserEstablishment"
						}
					},
					"defaultEstablishment": {
						"$ref": "#/components/schemas/Establishment"
					}
				}
			},
			"PageUserEstablishment": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserEstablishment"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageableObject": {
				"type": "object",
				"properties": {
					"offset": {
						"type": "integer",
						"format": "int64"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"pageNumber": {
						"type": "integer",
						"format": "int32"
					},
					"pageSize": {
						"type": "integer",
						"format": "int32"
					},
					"paged": {
						"type": "boolean"
					},
					"unpaged": {
						"type": "boolean"
					}
				}
			},
			"SortObject": {
				"type": "object",
				"properties": {
					"empty": {
						"type": "boolean"
					},
					"unsorted": {
						"type": "boolean"
					},
					"sorted": {
						"type": "boolean"
					}
				}
			},
			"WaAccountSpec": {
				"type": "object"
			},
			"PageWaAccount": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/WaAccount"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"WorkHourSchedExceptionSpec": {
				"type": "object"
			},
			"PageWorkHourSchedException": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/WorkHourSchedException"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"WorkDaySpec": {
				"type": "object"
			},
			"PageWorkDay": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/WorkDay"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"WorkDayUserProjection": {
				"type": "object",
				"properties": {
					"startService": {
						"type": "string"
					},
					"endService": {
						"type": "string"
					},
					"startBreak": {
						"type": "string"
					},
					"endBreak": {
						"type": "string"
					},
					"workDayId": {
						"type": "string"
					},
					"establishmentId": {
						"type": "string"
					},
					"dayWeek": {
						"type": "string"
					},
					"userEmployeeId": {
						"type": "string"
					}
				}
			},
			"UserPermissionSpec": {
				"type": "object"
			},
			"PageUserPermission": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserPermission"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"MonthWorkDaySpec": {
				"type": "object"
			},
			"PageMonthWorkDay": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MonthWorkDay"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"UserServiceSpec": {
				"type": "object"
			},
			"Pageable": {
				"type": "object",
				"properties": {
					"page": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"size": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"PageUserServiceDomain": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserServiceDomain"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"UserSpec": {
				"type": "object"
			},
			"PageUser": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/User"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"UserAddressProjection": {
				"type": "object",
				"properties": {
					"number": {
						"type": "string"
					},
					"addressId": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"uf": {
						"type": "string"
					},
					"district": {
						"type": "string"
					},
					"road": {
						"type": "string"
					},
					"complement": {
						"type": "string"
					},
					"cep": {
						"type": "string"
					}
				}
			},
			"UserEstablishmentProjection": {
				"type": "object",
				"properties": {
					"nickname": {
						"type": "string"
					}
				}
			},
			"UserProjection": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"$ref": "#/components/schemas/UserAddressProjection"
					},
					"situationType": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"userTelephones": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserTelephoneProjection"
						}
					},
					"userId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"userEstablishments": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserEstablishmentProjection"
						}
					}
				}
			},
			"UserTelephoneProjection": {
				"type": "object",
				"properties": {
					"userTelephoneId": {
						"type": "string"
					},
					"telephone": {
						"type": "string"
					}
				}
			},
			"UserTelephoneSpec": {
				"type": "object"
			},
			"PageUserTelephone": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserTelephone"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"UserLockSpec": {
				"type": "object"
			},
			"PageUserLock": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserLock"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageWorkHourSchedInfo": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/WorkHourSchedInfo"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"WorkHourSchedInfo": {
				"type": "object",
				"properties": {
					"hour": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"workHourId": {
						"type": "string"
					},
					"situationType": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"CANCELED"
						]
					},
					"dayWeek": {
						"type": "string"
					},
					"workHourSchedExceptionId": {
						"type": "string"
					},
					"isException": {
						"type": "string"
					}
				}
			},
			"PageUserProjection": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserProjection"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"ServiceValueSpec": {
				"type": "object"
			},
			"PageServiceValue": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ServiceValue"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"ServiceLinkSpec": {
				"type": "object"
			},
			"PageServiceLink": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ServiceLink"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"ServiceSpec": {
				"type": "object"
			},
			"PageServiceDomain": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ServiceDomain"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"ServiceDomainProjection": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"serviceId": {
						"type": "string",
						"format": "uuid"
					},
					"amountTime": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"ServiceValueGroupedSpec": {
				"type": "object"
			},
			"CategorySpec": {
				"type": "object"
			},
			"PageCategory": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Category"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"SchedulingServiceSpec": {
				"type": "object"
			},
			"PageSchedulingServiceDomain": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingServiceDomain"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"SchedulingSpec": {
				"type": "object"
			},
			"PageSchedulingDomain": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingDomain"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"SchedulingAttendanceResponseDto": {
				"type": "object",
				"properties": {
					"attendanceId": {
						"type": "string"
					},
					"attendanceName": {
						"type": "string"
					},
					"attendanceList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingWorkHourResponseDto"
						}
					}
				}
			},
			"SchedulingResponseDto": {
				"type": "object",
				"properties": {
					"attendanceList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingAttendanceResponseDto"
						}
					}
				}
			},
			"SchedulingWorkHourResponseDto": {
				"type": "object",
				"properties": {
					"dtaScheduling": {
						"type": "string",
						"format": "date"
					},
					"workHourSchedList": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"offset": {
									"type": "object",
									"properties": {
										"totalSeconds": {
											"type": "integer",
											"format": "int32"
										},
										"id": {
											"type": "string"
										},
										"rules": {
											"type": "object",
											"properties": {
												"fixedOffset": {
													"type": "boolean"
												},
												"transitions": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"duration": {
																"type": "object",
																"properties": {
																	"seconds": {
																		"type": "integer",
																		"format": "int64"
																	},
																	"nano": {
																		"type": "integer",
																		"format": "int32"
																	},
																	"negative": {
																		"type": "boolean"
																	},
																	"zero": {
																		"type": "boolean"
																	},
																	"units": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"properties": {
																				"dateBased": {
																					"type": "boolean"
																				},
																				"timeBased": {
																					"type": "boolean"
																				},
																				"durationEstimated": {
																					"type": "boolean"
																				}
																			}
																		}
																	}
																}
															},
															"gap": {
																"type": "boolean"
															},
															"dateTimeBefore": {
																"type": "string",
																"format": "date-time"
															},
															"dateTimeAfter": {
																"type": "string",
																"format": "date-time"
															},
															"instant": {
																"type": "string",
																"format": "date-time"
															},
															"overlap": {
																"type": "boolean"
															}
														}
													}
												},
												"transitionRules": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"month": {
																"type": "string",
																"enum": [
																	"JANUARY",
																	"FEBRUARY",
																	"MARCH",
																	"APRIL",
																	"MAY",
																	"JUNE",
																	"JULY",
																	"AUGUST",
																	"SEPTEMBER",
																	"OCTOBER",
																	"NOVEMBER",
																	"DECEMBER"
																]
															},
															"timeDefinition": {
																"type": "string",
																"enum": [
																	"UTC",
																	"WALL",
																	"STANDARD"
																]
															},
															"dayOfWeek": {
																"type": "string",
																"enum": [
																	"MONDAY",
																	"TUESDAY",
																	"WEDNESDAY",
																	"THURSDAY",
																	"FRIDAY",
																	"SATURDAY",
																	"SUNDAY"
																]
															},
															"dayOfMonthIndicator": {
																"type": "integer",
																"format": "int32"
															},
															"localTime": {
																"$ref": "#/components/schemas/LocalTime"
															},
															"midnightEndOfDay": {
																"type": "boolean"
															}
														}
													}
												}
											}
										}
									}
								},
								"hour": {
									"type": "integer",
									"format": "int32"
								},
								"minute": {
									"type": "integer",
									"format": "int32"
								},
								"second": {
									"type": "integer",
									"format": "int32"
								},
								"nano": {
									"type": "integer",
									"format": "int32"
								}
							}
						}
					}
				}
			},
			"PageSchedulingDomainProjection": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SchedulingDomainProjection"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"SchedulingDomainProjection": {
				"type": "object",
				"properties": {
					"day": {
						"type": "string",
						"format": "date"
					},
					"endIn": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"situationType": {
						"type": "string"
					},
					"beginIn": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"clientId": {
						"type": "string"
					},
					"eventId": {
						"type": "string"
					},
					"attendantId": {
						"type": "string"
					},
					"attendantName": {
						"type": "string"
					},
					"clientName": {
						"type": "string"
					},
					"eventType": {
						"type": "string"
					}
				}
			},
			"EstablishmentSpec": {
				"type": "object"
			},
			"PageEstablishment": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Establishment"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"UserEstablishmentSpec": {
				"type": "object"
			},
			"WorkDayDefaultProjection": {
				"type": "object",
				"properties": {
					"startService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endService": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"startBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"endBreak": {
						"type": "object",
						"properties": {
							"offset": {
								"type": "object",
								"properties": {
									"totalSeconds": {
										"type": "integer",
										"format": "int32"
									},
									"id": {
										"type": "string"
									},
									"rules": {
										"type": "object",
										"properties": {
											"fixedOffset": {
												"type": "boolean"
											},
											"transitions": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"duration": {
															"type": "object",
															"properties": {
																"seconds": {
																	"type": "integer",
																	"format": "int64"
																},
																"nano": {
																	"type": "integer",
																	"format": "int32"
																},
																"negative": {
																	"type": "boolean"
																},
																"zero": {
																	"type": "boolean"
																},
																"units": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"dateBased": {
																				"type": "boolean"
																			},
																			"timeBased": {
																				"type": "boolean"
																			},
																			"durationEstimated": {
																				"type": "boolean"
																			}
																		}
																	}
																}
															}
														},
														"gap": {
															"type": "boolean"
														},
														"dateTimeBefore": {
															"type": "string",
															"format": "date-time"
														},
														"dateTimeAfter": {
															"type": "string",
															"format": "date-time"
														},
														"instant": {
															"type": "string",
															"format": "date-time"
														},
														"overlap": {
															"type": "boolean"
														}
													}
												}
											},
											"transitionRules": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"month": {
															"type": "string",
															"enum": [
																"JANUARY",
																"FEBRUARY",
																"MARCH",
																"APRIL",
																"MAY",
																"JUNE",
																"JULY",
																"AUGUST",
																"SEPTEMBER",
																"OCTOBER",
																"NOVEMBER",
																"DECEMBER"
															]
														},
														"timeDefinition": {
															"type": "string",
															"enum": [
																"UTC",
																"WALL",
																"STANDARD"
															]
														},
														"dayOfWeek": {
															"type": "string",
															"enum": [
																"MONDAY",
																"TUESDAY",
																"WEDNESDAY",
																"THURSDAY",
																"FRIDAY",
																"SATURDAY",
																"SUNDAY"
															]
														},
														"dayOfMonthIndicator": {
															"type": "integer",
															"format": "int32"
														},
														"localTime": {
															"$ref": "#/components/schemas/LocalTime"
														},
														"midnightEndOfDay": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								}
							},
							"hour": {
								"type": "integer",
								"format": "int32"
							},
							"minute": {
								"type": "integer",
								"format": "int32"
							},
							"second": {
								"type": "integer",
								"format": "int32"
							},
							"nano": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"establishmentId": {
						"type": "string"
					},
					"dayWeek": {
						"type": "string"
					},
					"workDayDefaultId": {
						"type": "string"
					}
				}
			},
			"PageAttendanceDomain": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AttendanceDomain"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageAttendanceServiceDomain": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AttendanceServiceDomain"
						}
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"empty": {
						"type": "boolean"
					}
				}
			}
		},
		"securitySchemes": {
			"bearer-key": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}